install.packages(mlr)
install.packages("mlr")
install.packages("xml")
install.packages("XML")
install.packages("xml2-config")
install.packages("XML")
install.packages("mlr")
library(mlr)
install.packages("llama")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("llama")
install.packages("aslib-r")
install.packages("aslib")
install.packages("dplyr")
#summarize_exps.R
#Use this script to summarize results from experiments and import them into latex tables
#Damir Pulatov
library(aslib)
library(rJava)
??assertChoice
library(aslib)
sc = parseASScenario("modeling-algorithmic-performance/Models/aslib_scenarios/SAT18-EXP/")
length(sc$algo.runs$instance_id)
length(unique(sc$algo.runs$instance_id))
r = read.csv("main.csv")
length(unique(r$benchmark))
sc = parseASScenario("modeling-algorithmic-performance/Models/aslib_scenarios/SAT11-INDU/")
names(sc$desc$metainfo_algorithms)
dput(names(sc$desc$metainfo_algorithms))
xtable(names(sc$desc$metainfo_algorithms))
library("xtable")
install.packages("xtable")
library("xtable")
xtable(names(sc$desc$metainfo_algorithms))
xtable(as.vector(names(sc$desc$metainfo_algorithms)))
xtable(names(sc$desc$metainfo_algorithms))
?xtable
dput(names(sc$desc$metainfo_algorithms))
sc = parseASScenario("modeling-algorithmic-performance/Models/aslib_scenarios/SAT11-RAND/")
dput(names(sc$desc$metainfo_algorithms))
length(unique(sc$algo.runs$instance_id))
sc = parseASScenario("modeling-algorithmic-performance/Models/aslib_scenarios/SAT11-HAND/")
dput(names(sc$desc$metainfo_algorithms))
length(unique(sc$algo.runs$instance_id))
sc = parseASScenario("modeling-algorithmic-performance/Models/aslib_scenarios/OPENML-WEKA-2017/")
dput(names(sc$desc$metainfo_algorithms))
length(unique(sc$algo.runs$instance_id))
sc = parseASScenario("modeling-algorithmic-performance/Models/aslib_scenarios/GRAPHS-2015/")
length(unique(sc$algo.runs$instance_id))
dput(names(sc$desc$metainfo_algorithms))
m = read.csv("modeling-algorithmic-performance/Models/graphs2015_model/solvers_metrix.csv")
head(m$Solver)
m$Solver
length(m$Solver)
length(unique(m$Solver))
length(names(sc$desc$metainfo_algorithms))
length(unique(sc$algo.runs$algorithm))
length(unique(m$Solver))
unique(m$Solver)
sc = parseASScenario("modeling-algorithmic-performance/Models/aslib_scenarios/SAT03-16_INDU/")
dput(names(sc$desc$metainfo_algorithms))
length(unique(sc$algo.runs$instance_id))
m = read.csv("modeling-algorithmic-performance/Models/sat03-16_model/solvers_metrix.csv")
m$Solver
sc = parseASScenario("modeling-algorithmic-performance/Models/aslib_scenarios/TSP-LION2015/")
dput(names(sc$desc$metainfo_algorithms))
length(unique(sc$algo.runs$instance_id))
sc = parseASScenario("modeling-algorithmic-performance/Models/aslib_scenarios/SAT18-EXP/")
dput(names(sc$desc$metainfo_algorithms))
n = as.data.frame(names(sc$desc$metainfo_algorithms))
n
length(unique(sc$algo.runs$instance_id))
install.packages(c("optparse", "tidyr"))
library(llama)
?regressionPairs
library(titanic)
data("Titanic")
Titanic
install.packages("Titanic")
install.packages("titanic")
library(titanic)
ls()
Titanic
Titanic[, c("Survived")]
Titanic
Titanic[1]
Titanic[1, ]
typeof(Titanic)
t = na.omit(Titanic)
t
subset(Titanic, "Sex")
names(Titanic)
colnames(Titanic)
rownames(Titanic)
Titanic[1,]
Titanic[1]
Titanic[2]
Titanic[6]
Titanic[1, 5]
titanic::titanic_train
my_titanic = na.omit(titanic::titanic_train[, c("Survived", "Age", "Fare")])
task_titanic = makeClassifTask(id = "task", data = my_titanic, target = "Survived")
library(mlr)
my_titanic = na.omit(titanic::titanic_train[, c("Survived", "Age", "Fare")])
task_titanic = makeClassifTask(id = "task", data = my_titanic, target = "Survived")
listLearners(task_titanic)
listLearners(task_titanic, 100)
listLearners(task_titanic)
library(remotes)
install.packages("remotes")
library(remotes)
remotes::install_github("mlr-org/mlr3book", dependencies = TRUE)
library(mlr)
setwd("modeling-algorithmic-performance/Models/aslib_scenarios/")
list.files()
library(llama)
library(aslib)
sc = parseASScenario("SAT18-EXP/")
sc$desc$metainfo_algorithms
length(names(sc$desc$metainfo_algorithms))
m = read.csv("../sat18_model/solvers_metrix.csv")
length(m$Solver)
sc = parseASScenario("SAT11-INDU/")
length(names(sc$desc$metainfo_algorithms))
m = read.csv("../sat11indu_model/solvers_metrix.csv")
length(m$Solver)
sc = parseASScenario("SAT11-RAND/")
length(names(sc$desc$metainfo_algorithms))
m = read.csv("../sat11rand_model/solvers_metrix.csv")
length(m$Solver)
sc = parseASScenario("SAT11-HAND/")
length(names(sc$desc$metainfo_algorithms))
m = read.csv("../sat11hand_model/solvers_metrix.csv")
length(m$Solver)
sc = parseASScenario("SAT03-16_INDU//")
sc = parseASScenario("SAT03-16_INDU/")
length(names(sc$desc$metainfo_algorithms))
m = read.csv("../sat11hand_model/solvers_metrix.csv")
length(m$Solver)
m = read.csv("../sat03-16_model/solvers_metrix.csv")
length(m$Solver)
sc = parseASScenario("OPENML-WEKA-2017/")
length(names(sc$desc$metainfo_algorithms))
m = read.csv("../openml_model/solvers_metrix.csv")
length(m$Solver)
sc = parseASScenario("TSP-LION2015/")
length(names(sc$desc$metainfo_algorithms))
m = read.csv("../tsp-lion2015_model/solvers_metrix.csv")
length(m$Solver)
sc = parseASScenario("SAT11-INDU/")
names(sc$desc$metainfo_algorithms)
or = getCosealASScenario("SAT11-INDU")
or = getCosealASScenario("SAT11-INDU")
names(or$desc$metainfo_algorithms)
setdiff(names(or$desc$metainfo_algorithms), names(sc$desc$metainfo_algorithms))
setdiff(names(sc$desc$metainfo_algorithms), names(or$desc$metainfo_algorithms))
i = names(or$desc$metainfo_algorithms) %in% names(sc$desc$metainfo_algorithms)
i
sc = parseASScenario("SAT11-RAND/")
or = getCosealASScenario("SAT11-RAND")
i = names(or$desc$metainfo_algorithms) %in% names(sc$desc$metainfo_algorithms)
i
names(or$desc$metainfo_algorithms)[!i]
names(sc$desc$metainfo_algorithms)
or = getCosealASScenario("SAT11-HAND")
sc = parseASScenario("SAT11-HAND/")
i = names(or$desc$metainfo_algorithms) %in% names(sc$desc$metainfo_algorithms)
names(or$desc$metainfo_algorithms)[!i]
sc = parseASScenario("SAT03-16_INDU/")
or = getCosealASScenario("SAT03-16_INDU")
i = names(or$desc$metainfo_algorithms) %in% names(sc$desc$metainfo_algorithms)
names(or$desc$metainfo_algorithms)[!i]
sc = parseASScenario("OPENML-WEKA-2017/")
or = getCosealASScenario("OPENML-WEKA-2017")
i = names(or$desc$metainfo_algorithms) %in% names(sc$desc$metainfo_algorithms)
names(or$desc$metainfo_algorithms)[!i]
names(sc$desc$metainfo_algorithms)
length(names(or$desc$metainfo_algorithms)[!i])
sc = parseASScenario("TSP-LION2015/")
or = getCosealASScenario("TSP-LION2015")
i = names(or$desc$metainfo_algorithms) %in% names(sc$desc$metainfo_algorithms)
length(names(or$desc$metainfo_algorithms)[!i])
length(names(or$desc$metainfo_algorithms)[!i])
