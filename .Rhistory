setwd("./aslib-dashboard/")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
00
0/0
=======
?install.packages
library(ada)
help("brnn")
rm(scale)
ls()
rm(task_
rm(task)
rm(graph)
q()
listLearners
mlr::listLearners()
mlr::listLearners()
mlr::listLearners()
mlr::listLearners()
a = listLearners("classif")
a
library(mlr)
a = listLearners("classif")
a
a = listLearners("classif")
a$installed
regr_learners = listLearners("regr", warn.missing.packages = FALSE)
regr_learners
# list of integrated learners and their mlr names
regr_learners = listLearners("regr", warn.missing.packages = FALSE)
s = regr_learners$name[regr_learners$installed]
s
# list of integrated learners and their mlr names
regr_list = listLearners("regr", warn.missing.packages = FALSE)
#regr_ids = grep("regr.", all_learners$class)
#regr_ids = regr_ids[all_learners[regr_ids, ]$installed]
regr_learners = regr_list$name[regr_list$installed]
regr_mlr = regr_list$class[regr_list$installed]
regr_mlr3
regr_mlr
classif_list = listLearners("classif", warn.missing.packages = FALSE)
classif_learners = classif_list$name[classif_list$installed]
classif_mlr = classif_list$class[classif_list$installed]
classif_mlr
classif_learners
shiny::runApp('aslib-dashboard')
# list of integrated learners and their mlr names
regr_list = listLearners("regr", warn.missing.packages = FALSE)
mlr::listLearners()
setwd("aslib-dashboard/")
shiny::runApp()
sessionInfo
sessionInfo()
# list of integrated learners and their mlr names
regr_list = mlr::listLearners("regr", warn.missing.packages = FALSE)
>>>>>>> experimental
