placeholder = "ex. SAT11-INDU", value = "SAT11-INDU"),
"Custom" =  list(shinyDirButton("scenario_upload", label = "Upload scenario",
"Select directory with scenario"),
verbatimTextOutput("scenario_dir", placeholder = TRUE))
)
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp()
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules')
sc = getCosealASScenario("SAT11-INDU")
summary(sc)
runApp('shiny-selectors/modules')
read_scenario(input$scenario_type, global$datapath, input$scenario)
runApp('shiny-selectors/modules')
runApp('shiny-selectors/modules-learner')
?shinyDirChoose
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
?fileInput
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
?load
ls()
var_name = "sc"
?deparse
v = deparse(var_name)
v
v = deparse(eval(var_name))
v
v =  deparse(substitute(var_name))
v
v = substitute(var_name)
v
v = deparse(var_name)
v
v = deparse("sc")
v
v = substitute("sc")
v
v = deparse(substitute("sc"))
v
var_name = load(sprintf("~/algorithm-selection-data/results-pair-standard/standard_%s.RData",  scenario$desc$scenario_id))
file_name = "~/algorithm-selection-data/results-pair-standard/standard_SAT11-HAND.RData"
file_name
var_name = load(file_name)
var_name
model = deparse(var_name)
model
model = deparse(substitvar_name)
model = deparse(substitute(var_name))
model
model = get(var_name)
model
sc
llama.cv = convertToLlamaCVFolds(sc)
data = fixFeckingPresolve(sc, llama.cv)
data$test
data$test[[1]]
head(data$data)
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
data$test
data$test[1:10]
data$test[[1:10]]
data$test[[1]]
data$test[[2]]
ids = rbind(data$test)
ids
ids = rbind(lapply(data$test, function(x) {x}))
ids
lapply(data$test, function(x) x)
lapply(data$test, function(x) unlist(x))
ids = unlist(data$test)
ids
runApp('shiny-selectors/experiments/experimentLayout.R')
library(shiny); runApp('shiny-selectors/experiments/experimentLayout.R')
global
library(shiny); runApp('shiny-selectors/experiments/experimentLayout.R')
source('shiny-selectors/experiments/experimentLayout.R')
runApp('shiny-selectors/experiments/experimentLayout.R')
library(shiny); runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
library(shiny); runApp('shiny-selectors/experiments/upload-experiment.R')
runApp('shiny-selectors/experiments/upload-experiment.R')
install.packages("aslib")
install.packages("aslib")
library(shiny); runApp('shiny-selectors/experiments/upload-experiment.R')
runApp('shiny-selectors/experiments/upload-experiment.R')
runApp('shiny-selectors/experiments/upload-experiment.R')
sc
sc = getCosealASScenario("SAT11-INDU")
sc$algo.runs
runApp('shiny-selectors/experiments/upload-experiment.R')
runApp('shiny-selectors/experiments/upload-experiment.R')
runApp('shiny-selectors/experiments/staticUI.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
install.packages("shiny")
install.packages("shiny")
library(shiny); runApp('shiny-selectors/experiments/changingTemp.R')
runApp('shiny-selectors/experiments/changingTemp.R')
runApp('shiny-selectors/experiments/changingTemp.R')
runApp('shiny-selectors/experiments/changingTemp.R')
runApp('shiny-selectors/experiments/changingTemp.R')
runApp('shiny-selectors/experiments/changingTemp.R')
sc
data
llama.cv = convertToLlamaCVFolds(sc)
data = fixFeckingPresolve(sc, llama.cv)
head(data$data)
getwd()
load("./shiny-selectors/example-inputs/id.RData")
s1 = combined_model
s1
create_model(type == "Custom", learner_name = NULL, file_name = "./shiny-selectors/example-inputs/id.RData", data = data)
create_model(type = "Custom", learner_name = NULL, file_name = "./shiny-selectors/example-inputs/id.RData", data = data)
create_model(type = "Custom", learner_name = NULL, file_name = "./shiny-selectors/example-inputs/id.RData", data = NULL)
learner = makeImputeWrapper(learner = setHyperPars(makeLearner("regr.featureless")),
classes = list(numeric = imputeMean(), integer = imputeMean(), logical = imputeMode(),
factor = imputeConstant("NA"), character = imputeConstant("NA")))
learner
model = regression(learner,data)
model
model$models
model
model$predictions
s1
s1$predictions
typeof(s1$predictions)
class(s1$predictions)
class(model$predictions)
runApp('shiny-selectors/experiments/changingTemp.R')
?req
runApp('shiny-selectors/experiments/changingTemp.R')
runApp('shiny-selectors/experiments/changingTemp.R')
runApp('shiny-selectors/experiments/oneSelector.R')
runApp('shiny-selectors/experiments/oneSelector.R')
runApp('shiny-selectors/experiments/oneSelector.R')
runApp('shiny-selectors/experiments/oneSelector.R')
runApp('shiny-selectors/experiments/oneSelector.R')
runApp('shiny-selectors/experiments/oneSelector.R')
data
print(data())
runApp('shiny-selectors/experiments/over.R')
runApp('over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
head(data$data$nvarsOrig)
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
runApp('shiny-selectors/experiments/over.R')
typeof(data)
class(data)
class(sc)
class(sc$desc)
class(data$data)
library(shiny); runApp('shiny-selectors/static_ui/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
install.packages('htmlwidgets')
install.packages("htmlwidgets")
library(shiny); runApp('shiny-selectors/static_ui/compareSelectors.R')
runApp('shiny-selectors/compareSelectors.R')
library(shiny); runApp('shiny-selectors/compareSelectors.R')
library(shiny); runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
library(RWeka)
sessionInfo()
install.packages("RWekajars")
install.packages("RWekajars")
library(RWeka)
sessionInfo()
library(rJava)
sessionInfo()
install.packages("rJava")
install.packages("rJava")
library(shiny); runApp('shiny-selectors/static_ui/compareSelectors.R')
library(shiny); runApp('shiny-selectors/compareSelectors.R')
library(shiny); runApp('shiny-selectors/compareSelectors.R')
library(shiny); runApp('shiny-selectors/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
runApp('shiny-selectors/static_ui/compareSelectors.R')
library(shiny); runApp('shiny-selectors/static_ui/compareSelectors.R')
library(aslib)
sc = getCosealASScenario("SAT11-INDU")
shiny::runApp('aslib-dashboard')
sc = getCosealASScenario("SAT11-INDU")
summarizeAlgoPerf(sc, sc$desc$performance_measures)
print(summarizeAlgoPerf(sc, sc$desc$performance_measures))
runApp('aslib-dashboard')
runApp('aslib-dashboard')
runApp('aslib-dashboard')
runApp('aslib-dashboard')
runApp('aslib-dashboard')
runApp('aslib-dashboard')
runApp('aslib-dashboard')
plotAlgoPerfBoxplots(sc, sc$desc$performance_measures)
plotAlgoPerfCDFs(sc, sc$desc$performance_measures)
plotAlgoPerfDensities(sc, sc$desc$performance_measures)
plotAlgoPerfScatterMatrix(sc, sc$desc$performance_measures)
plotAlgoPerfDensities(sc, sc$desc$performance_measures)
plotAlgoPerfCDFs(sc, sc$desc$performance_measures)
plotAlgoPerfBoxplots(sc, sc$desc$performance_measures)
runApp('aslib-dashboard')
runApp('aslib-dashboard')
r2d3::r2d3("workshops/learn-d3/d3.R", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
//
var barHeight = Math.ceil(height / data.length);
svg.selectAll('rect')
.data(data)
r2d3::r2d3("workshops/learn-d3/d3-r.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
shiny::runApp('aslib-dashboard/project')
runApp('aslib-dashboard/project')
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
r2d3::r2d3("aslib-dashboard/d3-plot/barplot.js", data=c(0.3, 0.6, 0.8, 0.95, 0.40, 0.20))
?r2d3
getwd()
setwd("./aslib-dashboard/d3-plot/")
# testing r2d3
load("../data/id.RData")
model1 = combined_model
load("../data/metrics.RData")
model2 = combined_model
setwd("aslib-dashboard/d3-plot/")
# testing r2d3
load("../data/id.RData")
model1 = combined_model
load("../data/metrics.RData")
model2 = combined_model
# testing r2d3
library(aslib)
sc = parseASScenario("../data/aslib_scenarios/SAT11-INDU/")
data = convertToLlamaCVFolds(sc)
data = fixFeckingPresolve(sc, data)
# compute MSE ratios for each solver
calculate_errors = function(scenario, data, model) {
errors = rbind.fill(lapply(seq_along(1:length(names(scenario$desc$metainfo_algorithms))), function(solver.id) {
truth = select(data$data, c("instance_id", names(scenario$desc$metainfo_algorithms)[solver.id]))
colnames(truth) = c("instance_id", "score")
truth = truth[order(truth$instance_id), ]
truth = truth[[2]]
preds = subset(model$predictions, model$predictions$algorithm == names(scenario$desc$metainfo_algorithms)[solver.id])
preds = select(preds, c("instance_id", "score"))
preds = preds[order(preds$instance_id), ]
preds = preds[[2]]
error = measureRMSE(truth, preds)
val = list(RMSE = error, solver = names(scenario$desc$metainfo_algorithms)[solver.id])
val = as.data.frame(val)
return(val)
}))
}
error1 = calculate_errors(sc, data, model1)
library(shiny)
library(mlr)
library(llama)
library(aslib)
library(scatterD3)
library(shinyFiles)
library(plyr)
library(dplyr)
error1 = calculate_errors(sc, data, model1)
error2 = calculate_errors(sc, data, model2)
head(error1)
head(error2)
error = cbind(error1, error2)
head(error)
error = cbind.data.frame(error1, error2)
head(error)
length(error1[1])
length(error1[, 1])
error = data.frame(matrix(ncol = 2, nrow = length(error1[, 1])))
colnames(errors) = c("RMSE", "solver")
errors = data.frame(matrix(ncol = 2, nrow = length(error1[, 1])))
colnames(errors) = c("RMSE", "solver")
errors
errors$RMSE = error1$RMSE - error2$RMSE
errors$solver = error1$sol
errors$solver = error1$solver
head(errors)
library(r2d3)
r2d3(data = errors, script = "./barplot.js")
data = errors
getwd()
write.csv(errors, file = "data.csv", quote = FALSE, row.names = FALSE)
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
errors
e = errors
e$solver = NULL
write.csv(e, file = "e.csv", quote = FALSE, row.names = FALSE)
r2d3::r2d3("barplot.js", data=read.csv("e.csv"))
r2d3::r2d3("barplot.js", data=read.csv("e.csv"))
r2d3::r2d3("barplot.js", data=read.csv("e.csv"))
head(data)
r2d3::r2d3("barplot.js", data=read.csv("e.csv"))
r2d3::r2d3("barplot.js", data=read.csv("e.csv"))
r2d3::r2d3("barplot.js", data=read.csv("e.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
error
error
e
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
errors
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
r2d3::r2d3("barplot.js", data=read.csv("data.csv"))
